/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_RADIO_PB_H_INCLUDED
#define PB_RADIO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _LikedPlaylist {
    pb_callback_t uri;
} LikedPlaylist;

typedef struct _MultiSeedRequest {
    pb_callback_t uris;
} MultiSeedRequest;

typedef struct _Rules {
    pb_callback_t js;
} Rules;

typedef struct _StationList {
    pb_callback_t stations;
} StationList;

typedef struct _Tracks {
    pb_callback_t gids;
    pb_callback_t source;
    pb_callback_t identity;
    pb_callback_t tokens;
    pb_callback_t feedback;
} Tracks;

typedef struct _Feedback {
    pb_callback_t uri;
    pb_callback_t type;
    bool has_timestamp;
    double timestamp;
} Feedback;

typedef struct _RadioRequest {
    pb_callback_t uris;
    bool has_salt;
    int32_t salt;
    bool has_length;
    int32_t length;
    pb_callback_t stationId;
    pb_callback_t lastTracks;
} RadioRequest;

typedef struct _Station {
    pb_callback_t id;
    pb_callback_t title;
    pb_callback_t titleUri;
    pb_callback_t subtitle;
    pb_callback_t subtitleUri;
    pb_callback_t imageUri;
    bool has_lastListen;
    double lastListen;
    pb_callback_t seeds;
    bool has_thumbsUp;
    int32_t thumbsUp;
    bool has_thumbsDown;
    int32_t thumbsDown;
} Station;

typedef struct _StationResponse {
    bool has_station;
    Station station;
    pb_callback_t feedback;
} StationResponse;


/* Initializer values for message structs */
#define RadioRequest_init_default                {{{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define MultiSeedRequest_init_default            {{{NULL}, NULL}}
#define Feedback_init_default                    {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define Tracks_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Station_init_default                     {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define Rules_init_default                       {{{NULL}, NULL}}
#define StationResponse_init_default             {false, Station_init_default, {{NULL}, NULL}}
#define StationList_init_default                 {{{NULL}, NULL}}
#define LikedPlaylist_init_default               {{{NULL}, NULL}}
#define RadioRequest_init_zero                   {{{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define MultiSeedRequest_init_zero               {{{NULL}, NULL}}
#define Feedback_init_zero                       {{{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define Tracks_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Station_init_zero                        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, false, 0}
#define Rules_init_zero                          {{{NULL}, NULL}}
#define StationResponse_init_zero                {false, Station_init_zero, {{NULL}, NULL}}
#define StationList_init_zero                    {{{NULL}, NULL}}
#define LikedPlaylist_init_zero                  {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define LikedPlaylist_uri_tag                    1
#define MultiSeedRequest_uris_tag                1
#define Rules_js_tag                             1
#define StationList_stations_tag                 1
#define Tracks_gids_tag                          1
#define Tracks_source_tag                        2
#define Tracks_identity_tag                      3
#define Tracks_tokens_tag                        4
#define Tracks_feedback_tag                      5
#define Feedback_uri_tag                         1
#define Feedback_type_tag                        2
#define Feedback_timestamp_tag                   3
#define RadioRequest_uris_tag                    1
#define RadioRequest_salt_tag                    2
#define RadioRequest_length_tag                  4
#define RadioRequest_stationId_tag               5
#define RadioRequest_lastTracks_tag              6
#define Station_id_tag                           1
#define Station_title_tag                        2
#define Station_titleUri_tag                     3
#define Station_subtitle_tag                     4
#define Station_subtitleUri_tag                  5
#define Station_imageUri_tag                     6
#define Station_lastListen_tag                   7
#define Station_seeds_tag                        8
#define Station_thumbsUp_tag                     9
#define Station_thumbsDown_tag                   10
#define StationResponse_station_tag              1
#define StationResponse_feedback_tag             2

/* Struct field encoding specification for nanopb */
#define RadioRequest_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   uris,              1) \
X(a, STATIC,   OPTIONAL, INT32,    salt,              2) \
X(a, STATIC,   OPTIONAL, INT32,    length,            4) \
X(a, CALLBACK, OPTIONAL, STRING,   stationId,         5) \
X(a, CALLBACK, REPEATED, STRING,   lastTracks,        6)
#define RadioRequest_CALLBACK pb_default_field_callback
#define RadioRequest_DEFAULT NULL

#define MultiSeedRequest_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   uris,              1)
#define MultiSeedRequest_CALLBACK pb_default_field_callback
#define MultiSeedRequest_DEFAULT NULL

#define Feedback_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   uri,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   type,              2) \
X(a, STATIC,   OPTIONAL, DOUBLE,   timestamp,         3)
#define Feedback_CALLBACK pb_default_field_callback
#define Feedback_DEFAULT NULL

#define Tracks_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   gids,              1) \
X(a, CALLBACK, OPTIONAL, STRING,   source,            2) \
X(a, CALLBACK, OPTIONAL, STRING,   identity,          3) \
X(a, CALLBACK, REPEATED, STRING,   tokens,            4) \
X(a, CALLBACK, REPEATED, MESSAGE,  feedback,          5)
#define Tracks_CALLBACK pb_default_field_callback
#define Tracks_DEFAULT NULL
#define Tracks_feedback_MSGTYPE Feedback

#define Station_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   id,                1) \
X(a, CALLBACK, OPTIONAL, STRING,   title,             2) \
X(a, CALLBACK, OPTIONAL, STRING,   titleUri,          3) \
X(a, CALLBACK, OPTIONAL, STRING,   subtitle,          4) \
X(a, CALLBACK, OPTIONAL, STRING,   subtitleUri,       5) \
X(a, CALLBACK, OPTIONAL, STRING,   imageUri,          6) \
X(a, STATIC,   OPTIONAL, DOUBLE,   lastListen,        7) \
X(a, CALLBACK, REPEATED, STRING,   seeds,             8) \
X(a, STATIC,   OPTIONAL, INT32,    thumbsUp,          9) \
X(a, STATIC,   OPTIONAL, INT32,    thumbsDown,       10)
#define Station_CALLBACK pb_default_field_callback
#define Station_DEFAULT NULL

#define Rules_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   js,                1)
#define Rules_CALLBACK pb_default_field_callback
#define Rules_DEFAULT NULL

#define StationResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  station,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  feedback,          2)
#define StationResponse_CALLBACK pb_default_field_callback
#define StationResponse_DEFAULT NULL
#define StationResponse_station_MSGTYPE Station
#define StationResponse_feedback_MSGTYPE Feedback

#define StationList_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  stations,          1)
#define StationList_CALLBACK pb_default_field_callback
#define StationList_DEFAULT NULL
#define StationList_stations_MSGTYPE Station

#define LikedPlaylist_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   uri,               1)
#define LikedPlaylist_CALLBACK pb_default_field_callback
#define LikedPlaylist_DEFAULT NULL

extern const pb_msgdesc_t RadioRequest_msg;
extern const pb_msgdesc_t MultiSeedRequest_msg;
extern const pb_msgdesc_t Feedback_msg;
extern const pb_msgdesc_t Tracks_msg;
extern const pb_msgdesc_t Station_msg;
extern const pb_msgdesc_t Rules_msg;
extern const pb_msgdesc_t StationResponse_msg;
extern const pb_msgdesc_t StationList_msg;
extern const pb_msgdesc_t LikedPlaylist_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RadioRequest_fields &RadioRequest_msg
#define MultiSeedRequest_fields &MultiSeedRequest_msg
#define Feedback_fields &Feedback_msg
#define Tracks_fields &Tracks_msg
#define Station_fields &Station_msg
#define Rules_fields &Rules_msg
#define StationResponse_fields &StationResponse_msg
#define StationList_fields &StationList_msg
#define LikedPlaylist_fields &LikedPlaylist_msg

/* Maximum encoded size of messages (where known) */
/* RadioRequest_size depends on runtime parameters */
/* MultiSeedRequest_size depends on runtime parameters */
/* Feedback_size depends on runtime parameters */
/* Tracks_size depends on runtime parameters */
/* Station_size depends on runtime parameters */
/* Rules_size depends on runtime parameters */
/* StationResponse_size depends on runtime parameters */
/* StationList_size depends on runtime parameters */
/* LikedPlaylist_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
