/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_PUBSUB_PB_H_INCLUDED
#define PB_PUBSUB_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Subscription {
    pb_callback_t uri;
    bool has_expiry;
    int32_t expiry;
    bool has_status_code;
    int32_t status_code;
} Subscription;


/* Initializer values for message structs */
#define Subscription_init_default                {{{NULL}, NULL}, false, 0, false, 0}
#define Subscription_init_zero                   {{{NULL}, NULL}, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Subscription_uri_tag                     1
#define Subscription_expiry_tag                  2
#define Subscription_status_code_tag             3

/* Struct field encoding specification for nanopb */
#define Subscription_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   uri,               1) \
X(a, STATIC,   OPTIONAL, INT32,    expiry,            2) \
X(a, STATIC,   OPTIONAL, INT32,    status_code,       3)
#define Subscription_CALLBACK pb_default_field_callback
#define Subscription_DEFAULT NULL

extern const pb_msgdesc_t Subscription_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Subscription_fields &Subscription_msg

/* Maximum encoded size of messages (where known) */
/* Subscription_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
