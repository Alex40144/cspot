/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_POPCOUNT_PB_H_INCLUDED
#define PB_POPCOUNT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _PopcountRequest {
    char dummy_field;
} PopcountRequest;

typedef struct _PopcountResult {
    bool has_count;
    int64_t count;
    bool has_truncated;
    bool truncated;
    pb_callback_t user;
    pb_callback_t subscriptionTimestamps;
    pb_callback_t insertionTimestamps;
} PopcountResult;


/* Initializer values for message structs */
#define PopcountRequest_init_default             {0}
#define PopcountResult_init_default              {false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define PopcountRequest_init_zero                {0}
#define PopcountResult_init_zero                 {false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define PopcountResult_count_tag                 1
#define PopcountResult_truncated_tag             2
#define PopcountResult_user_tag                  3
#define PopcountResult_subscriptionTimestamps_tag 4
#define PopcountResult_insertionTimestamps_tag   5

/* Struct field encoding specification for nanopb */
#define PopcountRequest_FIELDLIST(X, a) \

#define PopcountRequest_CALLBACK NULL
#define PopcountRequest_DEFAULT NULL

#define PopcountResult_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, SINT64,   count,             1) \
X(a, STATIC,   OPTIONAL, BOOL,     truncated,         2) \
X(a, CALLBACK, REPEATED, STRING,   user,              3) \
X(a, CALLBACK, REPEATED, SINT64,   subscriptionTimestamps,   4) \
X(a, CALLBACK, REPEATED, SINT64,   insertionTimestamps,   5)
#define PopcountResult_CALLBACK pb_default_field_callback
#define PopcountResult_DEFAULT NULL

extern const pb_msgdesc_t PopcountRequest_msg;
extern const pb_msgdesc_t PopcountResult_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PopcountRequest_fields &PopcountRequest_msg
#define PopcountResult_fields &PopcountResult_msg

/* Maximum encoded size of messages (where known) */
#define PopcountRequest_size                     0
/* PopcountResult_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
