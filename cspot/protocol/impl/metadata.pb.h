/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_METADATA_PB_H_INCLUDED
#define PB_METADATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Album_Type {
    Album_Type_ALBUM = 1,
    Album_Type_SINGLE = 2,
    Album_Type_COMPILATION = 3,
    Album_Type_EP = 4,
    Album_Type_AUDIOBOOK = 5,
    Album_Type_PODCAST = 6
} Album_Type;

typedef enum _Show_MediaType {
    Show_MediaType_MIXED = 0,
    Show_MediaType_AUDIO = 1,
    Show_MediaType_VIDEO = 2
} Show_MediaType;

typedef enum _Show_ConsumptionOrder {
    Show_ConsumptionOrder_SEQUENTIAL = 1,
    Show_ConsumptionOrder_EPISODIC = 2,
    Show_ConsumptionOrder_RECENT = 3
} Show_ConsumptionOrder;

typedef enum _Image_Size {
    Image_Size_DEFAULT = 0,
    Image_Size_SMALL = 1,
    Image_Size_LARGE = 2,
    Image_Size_XLARGE = 3
} Image_Size;

typedef enum _Copyright_Type {
    Copyright_Type_P = 0,
    Copyright_Type_C = 1
} Copyright_Type;

typedef enum _Restriction_Catalogue {
    Restriction_Catalogue_AD = 0,
    Restriction_Catalogue_SUBSCRIPTION = 1,
    Restriction_Catalogue_CATALOGUE_ALL = 2,
    Restriction_Catalogue_SHUFFLE = 3,
    Restriction_Catalogue_COMMERCIAL = 4
} Restriction_Catalogue;

typedef enum _Restriction_Type {
    Restriction_Type_STREAMING = 0
} Restriction_Type;

typedef enum _AudioFile_Format {
    AudioFile_Format_OGG_VORBIS_96 = 0,
    AudioFile_Format_OGG_VORBIS_160 = 1,
    AudioFile_Format_OGG_VORBIS_320 = 2,
    AudioFile_Format_MP3_256 = 3,
    AudioFile_Format_MP3_320 = 4,
    AudioFile_Format_MP3_160 = 5,
    AudioFile_Format_MP3_96 = 6,
    AudioFile_Format_MP3_160_ENC = 7,
    AudioFile_Format_AAC_24 = 8,
    AudioFile_Format_AAC_48 = 9
} AudioFile_Format;

/* Struct definitions */
typedef struct _AlbumGroup {
    pb_callback_t album;
} AlbumGroup;

typedef struct _Biography {
    pb_callback_t text;
    pb_callback_t portrait;
    pb_callback_t portrait_group;
} Biography;

typedef struct _ExternalId {
    pb_callback_t type;
    pb_callback_t id;
} ExternalId;

typedef struct _ImageGroup {
    pb_callback_t image;
} ImageGroup;

typedef struct _Licensor {
    pb_callback_t uuid;
} Licensor;

typedef struct _TopTracks {
    pb_callback_t country;
    pb_callback_t track;
} TopTracks;

typedef struct _VideoFile {
    pb_callback_t file_id;
} VideoFile;

typedef struct _ActivityPeriod {
    bool has_start_year;
    int32_t start_year;
    bool has_end_year;
    int32_t end_year;
    bool has_decade;
    int32_t decade;
} ActivityPeriod;

typedef struct _Artist {
    pb_callback_t gid;
    pb_callback_t name;
    bool has_popularity;
    int32_t popularity;
    pb_callback_t top_track;
    pb_callback_t album_group;
    pb_callback_t single_group;
    pb_callback_t compilation_group;
    pb_callback_t appears_on_group;
    pb_callback_t genre;
    pb_callback_t external_id;
    pb_callback_t portrait;
    pb_callback_t biography;
    pb_callback_t activity_period;
    pb_callback_t restriction;
    pb_callback_t related;
    bool has_is_portrait_album_cover;
    bool is_portrait_album_cover;
    bool has_portrait_group;
    ImageGroup portrait_group;
    pb_callback_t sale_period;
    pb_callback_t availability;
} Artist;

typedef struct _AudioFile {
    pb_callback_t file_id;
    bool has_format;
    AudioFile_Format format;
} AudioFile;

typedef struct _Copyright {
    bool has_type;
    Copyright_Type type;
    pb_callback_t text;
} Copyright;

typedef struct _Date {
    bool has_year;
    int32_t year;
    bool has_month;
    int32_t month;
    bool has_day;
    int32_t day;
    bool has_hour;
    int32_t hour;
    bool has_minute;
    int32_t minute;
} Date;

typedef struct _Disc {
    bool has_number;
    int32_t number;
    pb_callback_t name;
    pb_callback_t track;
} Disc;

typedef struct _Image {
    pb_callback_t file_id;
    bool has_size;
    Image_Size size;
    bool has_width;
    int32_t width;
    bool has_height;
    int32_t height;
} Image;

typedef struct _Restriction {
    pb_callback_t catalogue;
    bool has_type;
    Restriction_Type type;
    pb_callback_t catalogue_str;
} Restriction;

typedef struct _Show {
    pb_callback_t gid;
    pb_callback_t name;
    pb_callback_t description;
    bool has_deprecated_popularity;
    int32_t deprecated_popularity;
    pb_callback_t publisher;
    pb_callback_t language;
    bool has_explicit;
    bool explicit;
    bool has_cover_image;
    ImageGroup cover_image;
    pb_callback_t episode;
    pb_callback_t copyright;
    pb_callback_t restriction;
    pb_callback_t keyword;
    bool has_media_type;
    Show_MediaType media_type;
    bool has_consumption_order;
    Show_ConsumptionOrder consumption_order;
    pb_callback_t availability;
} Show;

typedef struct _Album {
    pb_callback_t gid;
    pb_callback_t name;
    pb_callback_t artist;
    bool has_type;
    Album_Type type;
    pb_callback_t label;
    bool has_date;
    Date date;
    bool has_popularity;
    int32_t popularity;
    pb_callback_t genre;
    pb_callback_t cover;
    pb_callback_t external_id;
    pb_callback_t disc;
    pb_callback_t review;
    pb_callback_t copyright;
    pb_callback_t restriction;
    pb_callback_t related;
    pb_callback_t sale_period;
    bool has_cover_group;
    ImageGroup cover_group;
    pb_callback_t original_title;
    pb_callback_t version_title;
    pb_callback_t type_str;
    pb_callback_t availability;
} Album;

typedef struct _Availability {
    pb_callback_t catalogue_str;
    bool has_start;
    Date start;
} Availability;

typedef struct _Episode {
    pb_callback_t gid;
    pb_callback_t name;
    bool has_duration;
    int32_t duration;
    pb_callback_t audio;
    pb_callback_t description;
    bool has_number;
    int32_t number;
    bool has_publish_time;
    Date publish_time;
    bool has_deprecated_popularity;
    int32_t deprecated_popularity;
    bool has_cover_image;
    ImageGroup cover_image;
    pb_callback_t language;
    bool has_explicit;
    bool explicit;
    bool has_show;
    Show show;
    pb_callback_t video;
    pb_callback_t video_preview;
    pb_callback_t audio_preview;
    pb_callback_t restriction;
    bool has_freeze_frame;
    ImageGroup freeze_frame;
    pb_callback_t keyword;
    bool has_allow_background_playback;
    bool allow_background_playback;
    pb_callback_t availability;
    pb_callback_t external_url;
} Episode;

typedef struct _SalePeriod {
    pb_callback_t restriction;
    bool has_start;
    Date start;
    bool has_end;
    Date end;
} SalePeriod;

typedef struct _Track {
    pb_callback_t gid;
    pb_callback_t name;
    bool has_album;
    Album album;
    pb_callback_t artist;
    bool has_number;
    int32_t number;
    bool has_disc_number;
    int32_t disc_number;
    bool has_duration;
    int32_t duration;
    bool has_popularity;
    int32_t popularity;
    bool has_explicit;
    bool explicit;
    pb_callback_t external_id;
    pb_callback_t restriction;
    pb_callback_t file;
    pb_callback_t alternative;
    pb_callback_t sale_period;
    pb_callback_t preview;
    pb_callback_t tags;
    bool has_earliest_live_timestamp;
    int64_t earliest_live_timestamp;
    bool has_has_lyrics;
    bool has_lyrics;
    pb_callback_t availability;
    bool has_licensor;
    Licensor licensor;
} Track;


/* Helper constants for enums */
#define _Album_Type_MIN Album_Type_ALBUM
#define _Album_Type_MAX Album_Type_PODCAST
#define _Album_Type_ARRAYSIZE ((Album_Type)(Album_Type_PODCAST+1))

#define _Show_MediaType_MIN Show_MediaType_MIXED
#define _Show_MediaType_MAX Show_MediaType_VIDEO
#define _Show_MediaType_ARRAYSIZE ((Show_MediaType)(Show_MediaType_VIDEO+1))

#define _Show_ConsumptionOrder_MIN Show_ConsumptionOrder_SEQUENTIAL
#define _Show_ConsumptionOrder_MAX Show_ConsumptionOrder_RECENT
#define _Show_ConsumptionOrder_ARRAYSIZE ((Show_ConsumptionOrder)(Show_ConsumptionOrder_RECENT+1))

#define _Image_Size_MIN Image_Size_DEFAULT
#define _Image_Size_MAX Image_Size_XLARGE
#define _Image_Size_ARRAYSIZE ((Image_Size)(Image_Size_XLARGE+1))

#define _Copyright_Type_MIN Copyright_Type_P
#define _Copyright_Type_MAX Copyright_Type_C
#define _Copyright_Type_ARRAYSIZE ((Copyright_Type)(Copyright_Type_C+1))

#define _Restriction_Catalogue_MIN Restriction_Catalogue_AD
#define _Restriction_Catalogue_MAX Restriction_Catalogue_COMMERCIAL
#define _Restriction_Catalogue_ARRAYSIZE ((Restriction_Catalogue)(Restriction_Catalogue_COMMERCIAL+1))

#define _Restriction_Type_MIN Restriction_Type_STREAMING
#define _Restriction_Type_MAX Restriction_Type_STREAMING
#define _Restriction_Type_ARRAYSIZE ((Restriction_Type)(Restriction_Type_STREAMING+1))

#define _AudioFile_Format_MIN AudioFile_Format_OGG_VORBIS_96
#define _AudioFile_Format_MAX AudioFile_Format_AAC_48
#define _AudioFile_Format_ARRAYSIZE ((AudioFile_Format)(AudioFile_Format_AAC_48+1))


/* Initializer values for message structs */
#define Artist_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, ImageGroup_init_default, {{NULL}, NULL}, {{NULL}, NULL}}
#define Album_init_default                       {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _Album_Type_MIN, {{NULL}, NULL}, false, Date_init_default, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, ImageGroup_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Track_init_default                       {{{NULL}, NULL}, {{NULL}, NULL}, false, Album_init_default, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, Licensor_init_default}
#define Show_init_default                        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, ImageGroup_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _Show_MediaType_MIN, false, _Show_ConsumptionOrder_MIN, {{NULL}, NULL}}
#define Episode_init_default                     {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, Date_init_default, false, 0, false, ImageGroup_init_default, {{NULL}, NULL}, false, 0, false, Show_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, ImageGroup_init_default, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Licensor_init_default                    {{{NULL}, NULL}}
#define TopTracks_init_default                   {{{NULL}, NULL}, {{NULL}, NULL}}
#define ActivityPeriod_init_default              {false, 0, false, 0, false, 0}
#define AlbumGroup_init_default                  {{{NULL}, NULL}}
#define Date_init_default                        {false, 0, false, 0, false, 0, false, 0, false, 0}
#define Image_init_default                       {{{NULL}, NULL}, false, _Image_Size_MIN, false, 0, false, 0}
#define ImageGroup_init_default                  {{{NULL}, NULL}}
#define Biography_init_default                   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Disc_init_default                        {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Copyright_init_default                   {false, _Copyright_Type_MIN, {{NULL}, NULL}}
#define Restriction_init_default                 {{{NULL}, NULL}, false, _Restriction_Type_MIN, {{NULL}, NULL}}
#define Availability_init_default                {{{NULL}, NULL}, false, Date_init_default}
#define SalePeriod_init_default                  {{{NULL}, NULL}, false, Date_init_default, false, Date_init_default}
#define ExternalId_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define AudioFile_init_default                   {{{NULL}, NULL}, false, _AudioFile_Format_MIN}
#define VideoFile_init_default                   {{{NULL}, NULL}}
#define Artist_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, ImageGroup_init_zero, {{NULL}, NULL}, {{NULL}, NULL}}
#define Album_init_zero                          {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _Album_Type_MIN, {{NULL}, NULL}, false, Date_init_zero, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, ImageGroup_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Track_init_zero                          {{{NULL}, NULL}, {{NULL}, NULL}, false, Album_init_zero, {{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0, {{NULL}, NULL}, false, Licensor_init_zero}
#define Show_init_zero                           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, ImageGroup_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _Show_MediaType_MIN, false, _Show_ConsumptionOrder_MIN, {{NULL}, NULL}}
#define Episode_init_zero                        {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, Date_init_zero, false, 0, false, ImageGroup_init_zero, {{NULL}, NULL}, false, 0, false, Show_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, ImageGroup_init_zero, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Licensor_init_zero                       {{{NULL}, NULL}}
#define TopTracks_init_zero                      {{{NULL}, NULL}, {{NULL}, NULL}}
#define ActivityPeriod_init_zero                 {false, 0, false, 0, false, 0}
#define AlbumGroup_init_zero                     {{{NULL}, NULL}}
#define Date_init_zero                           {false, 0, false, 0, false, 0, false, 0, false, 0}
#define Image_init_zero                          {{{NULL}, NULL}, false, _Image_Size_MIN, false, 0, false, 0}
#define ImageGroup_init_zero                     {{{NULL}, NULL}}
#define Biography_init_zero                      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Disc_init_zero                           {false, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Copyright_init_zero                      {false, _Copyright_Type_MIN, {{NULL}, NULL}}
#define Restriction_init_zero                    {{{NULL}, NULL}, false, _Restriction_Type_MIN, {{NULL}, NULL}}
#define Availability_init_zero                   {{{NULL}, NULL}, false, Date_init_zero}
#define SalePeriod_init_zero                     {{{NULL}, NULL}, false, Date_init_zero, false, Date_init_zero}
#define ExternalId_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}}
#define AudioFile_init_zero                      {{{NULL}, NULL}, false, _AudioFile_Format_MIN}
#define VideoFile_init_zero                      {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define AlbumGroup_album_tag                     1
#define Biography_text_tag                       1
#define Biography_portrait_tag                   2
#define Biography_portrait_group_tag             3
#define ExternalId_type_tag                      1
#define ExternalId_id_tag                        2
#define ImageGroup_image_tag                     1
#define Licensor_uuid_tag                        1
#define TopTracks_country_tag                    1
#define TopTracks_track_tag                      2
#define VideoFile_file_id_tag                    1
#define ActivityPeriod_start_year_tag            1
#define ActivityPeriod_end_year_tag              2
#define ActivityPeriod_decade_tag                3
#define Artist_gid_tag                           1
#define Artist_name_tag                          2
#define Artist_popularity_tag                    3
#define Artist_top_track_tag                     4
#define Artist_album_group_tag                   5
#define Artist_single_group_tag                  6
#define Artist_compilation_group_tag             7
#define Artist_appears_on_group_tag              8
#define Artist_genre_tag                         9
#define Artist_external_id_tag                   10
#define Artist_portrait_tag                      11
#define Artist_biography_tag                     12
#define Artist_activity_period_tag               13
#define Artist_restriction_tag                   14
#define Artist_related_tag                       15
#define Artist_is_portrait_album_cover_tag       16
#define Artist_portrait_group_tag                17
#define Artist_sale_period_tag                   18
#define Artist_availability_tag                  20
#define AudioFile_file_id_tag                    1
#define AudioFile_format_tag                     2
#define Copyright_type_tag                       1
#define Copyright_text_tag                       2
#define Date_year_tag                            1
#define Date_month_tag                           2
#define Date_day_tag                             3
#define Date_hour_tag                            4
#define Date_minute_tag                          5
#define Disc_number_tag                          1
#define Disc_name_tag                            2
#define Disc_track_tag                           3
#define Image_file_id_tag                        1
#define Image_size_tag                           2
#define Image_width_tag                          3
#define Image_height_tag                         4
#define Restriction_catalogue_tag                1
#define Restriction_type_tag                     4
#define Restriction_catalogue_str_tag            5
#define Show_gid_tag                             1
#define Show_name_tag                            2
#define Show_description_tag                     64
#define Show_deprecated_popularity_tag           65
#define Show_publisher_tag                       66
#define Show_language_tag                        67
#define Show_explicit_tag                        68
#define Show_cover_image_tag                     69
#define Show_episode_tag                         70
#define Show_copyright_tag                       71
#define Show_restriction_tag                     72
#define Show_keyword_tag                         73
#define Show_media_type_tag                      74
#define Show_consumption_order_tag               75
#define Show_availability_tag                    78
#define Album_gid_tag                            1
#define Album_name_tag                           2
#define Album_artist_tag                         3
#define Album_type_tag                           4
#define Album_label_tag                          5
#define Album_date_tag                           6
#define Album_popularity_tag                     7
#define Album_genre_tag                          8
#define Album_cover_tag                          9
#define Album_external_id_tag                    10
#define Album_disc_tag                           11
#define Album_review_tag                         12
#define Album_copyright_tag                      13
#define Album_restriction_tag                    14
#define Album_related_tag                        15
#define Album_sale_period_tag                    16
#define Album_cover_group_tag                    17
#define Album_original_title_tag                 18
#define Album_version_title_tag                  19
#define Album_type_str_tag                       20
#define Album_availability_tag                   23
#define Availability_catalogue_str_tag           1
#define Availability_start_tag                   2
#define Episode_gid_tag                          1
#define Episode_name_tag                         2
#define Episode_duration_tag                     7
#define Episode_audio_tag                        12
#define Episode_description_tag                  64
#define Episode_number_tag                       65
#define Episode_publish_time_tag                 66
#define Episode_deprecated_popularity_tag        67
#define Episode_cover_image_tag                  68
#define Episode_language_tag                     69
#define Episode_explicit_tag                     70
#define Episode_show_tag                         71
#define Episode_video_tag                        72
#define Episode_video_preview_tag                73
#define Episode_audio_preview_tag                74
#define Episode_restriction_tag                  75
#define Episode_freeze_frame_tag                 76
#define Episode_keyword_tag                      77
#define Episode_allow_background_playback_tag    81
#define Episode_availability_tag                 82
#define Episode_external_url_tag                 83
#define SalePeriod_restriction_tag               1
#define SalePeriod_start_tag                     2
#define SalePeriod_end_tag                       3
#define Track_gid_tag                            1
#define Track_name_tag                           2
#define Track_album_tag                          3
#define Track_artist_tag                         4
#define Track_number_tag                         5
#define Track_disc_number_tag                    6
#define Track_duration_tag                       7
#define Track_popularity_tag                     8
#define Track_explicit_tag                       9
#define Track_external_id_tag                    10
#define Track_restriction_tag                    11
#define Track_file_tag                           12
#define Track_alternative_tag                    13
#define Track_sale_period_tag                    14
#define Track_preview_tag                        15
#define Track_tags_tag                           16
#define Track_earliest_live_timestamp_tag        17
#define Track_has_lyrics_tag                     18
#define Track_availability_tag                   19
#define Track_licensor_tag                       21

/* Struct field encoding specification for nanopb */
#define Artist_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    gid,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, SINT32,   popularity,        3) \
X(a, CALLBACK, REPEATED, MESSAGE,  top_track,         4) \
X(a, CALLBACK, REPEATED, MESSAGE,  album_group,       5) \
X(a, CALLBACK, REPEATED, MESSAGE,  single_group,      6) \
X(a, CALLBACK, REPEATED, MESSAGE,  compilation_group,   7) \
X(a, CALLBACK, REPEATED, MESSAGE,  appears_on_group,   8) \
X(a, CALLBACK, REPEATED, STRING,   genre,             9) \
X(a, CALLBACK, REPEATED, MESSAGE,  external_id,      10) \
X(a, CALLBACK, REPEATED, MESSAGE,  portrait,         11) \
X(a, CALLBACK, REPEATED, MESSAGE,  biography,        12) \
X(a, CALLBACK, REPEATED, MESSAGE,  activity_period,  13) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,      14) \
X(a, CALLBACK, REPEATED, MESSAGE,  related,          15) \
X(a, STATIC,   OPTIONAL, BOOL,     is_portrait_album_cover,  16) \
X(a, STATIC,   OPTIONAL, MESSAGE,  portrait_group,   17) \
X(a, CALLBACK, REPEATED, MESSAGE,  sale_period,      18) \
X(a, CALLBACK, REPEATED, MESSAGE,  availability,     20)
#define Artist_CALLBACK pb_default_field_callback
#define Artist_DEFAULT NULL
#define Artist_top_track_MSGTYPE TopTracks
#define Artist_album_group_MSGTYPE AlbumGroup
#define Artist_single_group_MSGTYPE AlbumGroup
#define Artist_compilation_group_MSGTYPE AlbumGroup
#define Artist_appears_on_group_MSGTYPE AlbumGroup
#define Artist_external_id_MSGTYPE ExternalId
#define Artist_portrait_MSGTYPE Image
#define Artist_biography_MSGTYPE Biography
#define Artist_activity_period_MSGTYPE ActivityPeriod
#define Artist_restriction_MSGTYPE Restriction
#define Artist_related_MSGTYPE Artist
#define Artist_portrait_group_MSGTYPE ImageGroup
#define Artist_sale_period_MSGTYPE SalePeriod
#define Artist_availability_MSGTYPE Availability

#define Album_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    gid,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, CALLBACK, REPEATED, MESSAGE,  artist,            3) \
X(a, STATIC,   OPTIONAL, UENUM,    type,              4) \
X(a, CALLBACK, OPTIONAL, STRING,   label,             5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  date,              6) \
X(a, STATIC,   OPTIONAL, SINT32,   popularity,        7) \
X(a, CALLBACK, REPEATED, STRING,   genre,             8) \
X(a, CALLBACK, REPEATED, MESSAGE,  cover,             9) \
X(a, CALLBACK, REPEATED, MESSAGE,  external_id,      10) \
X(a, CALLBACK, REPEATED, MESSAGE,  disc,             11) \
X(a, CALLBACK, REPEATED, STRING,   review,           12) \
X(a, CALLBACK, REPEATED, MESSAGE,  copyright,        13) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,      14) \
X(a, CALLBACK, REPEATED, MESSAGE,  related,          15) \
X(a, CALLBACK, REPEATED, MESSAGE,  sale_period,      16) \
X(a, STATIC,   OPTIONAL, MESSAGE,  cover_group,      17) \
X(a, CALLBACK, OPTIONAL, STRING,   original_title,   18) \
X(a, CALLBACK, OPTIONAL, STRING,   version_title,    19) \
X(a, CALLBACK, OPTIONAL, STRING,   type_str,         20) \
X(a, CALLBACK, REPEATED, MESSAGE,  availability,     23)
#define Album_CALLBACK pb_default_field_callback
#define Album_DEFAULT (const pb_byte_t*)"\x20\x01\x00"
#define Album_artist_MSGTYPE Artist
#define Album_date_MSGTYPE Date
#define Album_cover_MSGTYPE Image
#define Album_external_id_MSGTYPE ExternalId
#define Album_disc_MSGTYPE Disc
#define Album_copyright_MSGTYPE Copyright
#define Album_restriction_MSGTYPE Restriction
#define Album_related_MSGTYPE Album
#define Album_sale_period_MSGTYPE SalePeriod
#define Album_cover_group_MSGTYPE ImageGroup
#define Album_availability_MSGTYPE Availability

#define Track_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    gid,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  album,             3) \
X(a, CALLBACK, REPEATED, MESSAGE,  artist,            4) \
X(a, STATIC,   OPTIONAL, SINT32,   number,            5) \
X(a, STATIC,   OPTIONAL, SINT32,   disc_number,       6) \
X(a, STATIC,   OPTIONAL, SINT32,   duration,          7) \
X(a, STATIC,   OPTIONAL, SINT32,   popularity,        8) \
X(a, STATIC,   OPTIONAL, BOOL,     explicit,          9) \
X(a, CALLBACK, REPEATED, MESSAGE,  external_id,      10) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,      11) \
X(a, CALLBACK, REPEATED, MESSAGE,  file,             12) \
X(a, CALLBACK, REPEATED, MESSAGE,  alternative,      13) \
X(a, CALLBACK, REPEATED, MESSAGE,  sale_period,      14) \
X(a, CALLBACK, REPEATED, MESSAGE,  preview,          15) \
X(a, CALLBACK, REPEATED, STRING,   tags,             16) \
X(a, STATIC,   OPTIONAL, INT64,    earliest_live_timestamp,  17) \
X(a, STATIC,   OPTIONAL, BOOL,     has_lyrics,       18) \
X(a, CALLBACK, REPEATED, MESSAGE,  availability,     19) \
X(a, STATIC,   OPTIONAL, MESSAGE,  licensor,         21)
#define Track_CALLBACK pb_default_field_callback
#define Track_DEFAULT NULL
#define Track_album_MSGTYPE Album
#define Track_artist_MSGTYPE Artist
#define Track_external_id_MSGTYPE ExternalId
#define Track_restriction_MSGTYPE Restriction
#define Track_file_MSGTYPE AudioFile
#define Track_alternative_MSGTYPE Track
#define Track_sale_period_MSGTYPE SalePeriod
#define Track_preview_MSGTYPE AudioFile
#define Track_availability_MSGTYPE Availability
#define Track_licensor_MSGTYPE Licensor

#define Show_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    gid,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, CALLBACK, OPTIONAL, STRING,   description,      64) \
X(a, STATIC,   OPTIONAL, SINT32,   deprecated_popularity,  65) \
X(a, CALLBACK, OPTIONAL, STRING,   publisher,        66) \
X(a, CALLBACK, OPTIONAL, STRING,   language,         67) \
X(a, STATIC,   OPTIONAL, BOOL,     explicit,         68) \
X(a, STATIC,   OPTIONAL, MESSAGE,  cover_image,      69) \
X(a, CALLBACK, REPEATED, MESSAGE,  episode,          70) \
X(a, CALLBACK, REPEATED, MESSAGE,  copyright,        71) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,      72) \
X(a, CALLBACK, REPEATED, STRING,   keyword,          73) \
X(a, STATIC,   OPTIONAL, UENUM,    media_type,       74) \
X(a, STATIC,   OPTIONAL, UENUM,    consumption_order,  75) \
X(a, CALLBACK, REPEATED, MESSAGE,  availability,     78)
#define Show_CALLBACK pb_default_field_callback
#define Show_DEFAULT (const pb_byte_t*)"\xd8\x04\x01\x00"
#define Show_cover_image_MSGTYPE ImageGroup
#define Show_episode_MSGTYPE Episode
#define Show_copyright_MSGTYPE Copyright
#define Show_restriction_MSGTYPE Restriction
#define Show_availability_MSGTYPE Availability

#define Episode_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    gid,               1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, STATIC,   OPTIONAL, SINT32,   duration,          7) \
X(a, CALLBACK, REPEATED, MESSAGE,  audio,            12) \
X(a, CALLBACK, OPTIONAL, STRING,   description,      64) \
X(a, STATIC,   OPTIONAL, SINT32,   number,           65) \
X(a, STATIC,   OPTIONAL, MESSAGE,  publish_time,     66) \
X(a, STATIC,   OPTIONAL, SINT32,   deprecated_popularity,  67) \
X(a, STATIC,   OPTIONAL, MESSAGE,  cover_image,      68) \
X(a, CALLBACK, OPTIONAL, STRING,   language,         69) \
X(a, STATIC,   OPTIONAL, BOOL,     explicit,         70) \
X(a, STATIC,   OPTIONAL, MESSAGE,  show,             71) \
X(a, CALLBACK, REPEATED, MESSAGE,  video,            72) \
X(a, CALLBACK, REPEATED, MESSAGE,  video_preview,    73) \
X(a, CALLBACK, REPEATED, MESSAGE,  audio_preview,    74) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,      75) \
X(a, STATIC,   OPTIONAL, MESSAGE,  freeze_frame,     76) \
X(a, CALLBACK, REPEATED, STRING,   keyword,          77) \
X(a, STATIC,   OPTIONAL, BOOL,     allow_background_playback,  81) \
X(a, CALLBACK, REPEATED, MESSAGE,  availability,     82) \
X(a, CALLBACK, OPTIONAL, STRING,   external_url,     83)
#define Episode_CALLBACK pb_default_field_callback
#define Episode_DEFAULT NULL
#define Episode_audio_MSGTYPE AudioFile
#define Episode_publish_time_MSGTYPE Date
#define Episode_cover_image_MSGTYPE ImageGroup
#define Episode_show_MSGTYPE Show
#define Episode_video_MSGTYPE VideoFile
#define Episode_video_preview_MSGTYPE VideoFile
#define Episode_audio_preview_MSGTYPE AudioFile
#define Episode_restriction_MSGTYPE Restriction
#define Episode_freeze_frame_MSGTYPE ImageGroup
#define Episode_availability_MSGTYPE Availability

#define Licensor_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    uuid,              1)
#define Licensor_CALLBACK pb_default_field_callback
#define Licensor_DEFAULT NULL

#define TopTracks_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   country,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  track,             2)
#define TopTracks_CALLBACK pb_default_field_callback
#define TopTracks_DEFAULT NULL
#define TopTracks_track_MSGTYPE Track

#define ActivityPeriod_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, SINT32,   start_year,        1) \
X(a, STATIC,   OPTIONAL, SINT32,   end_year,          2) \
X(a, STATIC,   OPTIONAL, SINT32,   decade,            3)
#define ActivityPeriod_CALLBACK NULL
#define ActivityPeriod_DEFAULT NULL

#define AlbumGroup_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  album,             1)
#define AlbumGroup_CALLBACK pb_default_field_callback
#define AlbumGroup_DEFAULT NULL
#define AlbumGroup_album_MSGTYPE Album

#define Date_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, SINT32,   year,              1) \
X(a, STATIC,   OPTIONAL, SINT32,   month,             2) \
X(a, STATIC,   OPTIONAL, SINT32,   day,               3) \
X(a, STATIC,   OPTIONAL, SINT32,   hour,              4) \
X(a, STATIC,   OPTIONAL, SINT32,   minute,            5)
#define Date_CALLBACK NULL
#define Date_DEFAULT NULL

#define Image_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    file_id,           1) \
X(a, STATIC,   OPTIONAL, UENUM,    size,              2) \
X(a, STATIC,   OPTIONAL, SINT32,   width,             3) \
X(a, STATIC,   OPTIONAL, SINT32,   height,            4)
#define Image_CALLBACK pb_default_field_callback
#define Image_DEFAULT NULL

#define ImageGroup_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  image,             1)
#define ImageGroup_CALLBACK pb_default_field_callback
#define ImageGroup_DEFAULT NULL
#define ImageGroup_image_MSGTYPE Image

#define Biography_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   text,              1) \
X(a, CALLBACK, REPEATED, MESSAGE,  portrait,          2) \
X(a, CALLBACK, REPEATED, MESSAGE,  portrait_group,    3)
#define Biography_CALLBACK pb_default_field_callback
#define Biography_DEFAULT NULL
#define Biography_portrait_MSGTYPE Image
#define Biography_portrait_group_MSGTYPE ImageGroup

#define Disc_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, SINT32,   number,            1) \
X(a, CALLBACK, OPTIONAL, STRING,   name,              2) \
X(a, CALLBACK, REPEATED, MESSAGE,  track,             3)
#define Disc_CALLBACK pb_default_field_callback
#define Disc_DEFAULT NULL
#define Disc_track_MSGTYPE Track

#define Copyright_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    type,              1) \
X(a, CALLBACK, OPTIONAL, STRING,   text,              2)
#define Copyright_CALLBACK pb_default_field_callback
#define Copyright_DEFAULT NULL

#define Restriction_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UENUM,    catalogue,         1) \
X(a, STATIC,   OPTIONAL, UENUM,    type,              4) \
X(a, CALLBACK, REPEATED, STRING,   catalogue_str,     5)
#define Restriction_CALLBACK pb_default_field_callback
#define Restriction_DEFAULT NULL

#define Availability_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, STRING,   catalogue_str,     1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  start,             2)
#define Availability_CALLBACK pb_default_field_callback
#define Availability_DEFAULT NULL
#define Availability_start_MSGTYPE Date

#define SalePeriod_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  restriction,       1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  start,             2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  end,               3)
#define SalePeriod_CALLBACK pb_default_field_callback
#define SalePeriod_DEFAULT NULL
#define SalePeriod_restriction_MSGTYPE Restriction
#define SalePeriod_start_MSGTYPE Date
#define SalePeriod_end_MSGTYPE Date

#define ExternalId_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   type,              1) \
X(a, CALLBACK, OPTIONAL, STRING,   id,                2)
#define ExternalId_CALLBACK pb_default_field_callback
#define ExternalId_DEFAULT NULL

#define AudioFile_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    file_id,           1) \
X(a, STATIC,   OPTIONAL, UENUM,    format,            2)
#define AudioFile_CALLBACK pb_default_field_callback
#define AudioFile_DEFAULT NULL

#define VideoFile_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, BYTES,    file_id,           1)
#define VideoFile_CALLBACK pb_default_field_callback
#define VideoFile_DEFAULT NULL

extern const pb_msgdesc_t Artist_msg;
extern const pb_msgdesc_t Album_msg;
extern const pb_msgdesc_t Track_msg;
extern const pb_msgdesc_t Show_msg;
extern const pb_msgdesc_t Episode_msg;
extern const pb_msgdesc_t Licensor_msg;
extern const pb_msgdesc_t TopTracks_msg;
extern const pb_msgdesc_t ActivityPeriod_msg;
extern const pb_msgdesc_t AlbumGroup_msg;
extern const pb_msgdesc_t Date_msg;
extern const pb_msgdesc_t Image_msg;
extern const pb_msgdesc_t ImageGroup_msg;
extern const pb_msgdesc_t Biography_msg;
extern const pb_msgdesc_t Disc_msg;
extern const pb_msgdesc_t Copyright_msg;
extern const pb_msgdesc_t Restriction_msg;
extern const pb_msgdesc_t Availability_msg;
extern const pb_msgdesc_t SalePeriod_msg;
extern const pb_msgdesc_t ExternalId_msg;
extern const pb_msgdesc_t AudioFile_msg;
extern const pb_msgdesc_t VideoFile_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Artist_fields &Artist_msg
#define Album_fields &Album_msg
#define Track_fields &Track_msg
#define Show_fields &Show_msg
#define Episode_fields &Episode_msg
#define Licensor_fields &Licensor_msg
#define TopTracks_fields &TopTracks_msg
#define ActivityPeriod_fields &ActivityPeriod_msg
#define AlbumGroup_fields &AlbumGroup_msg
#define Date_fields &Date_msg
#define Image_fields &Image_msg
#define ImageGroup_fields &ImageGroup_msg
#define Biography_fields &Biography_msg
#define Disc_fields &Disc_msg
#define Copyright_fields &Copyright_msg
#define Restriction_fields &Restriction_msg
#define Availability_fields &Availability_msg
#define SalePeriod_fields &SalePeriod_msg
#define ExternalId_fields &ExternalId_msg
#define AudioFile_fields &AudioFile_msg
#define VideoFile_fields &VideoFile_msg

/* Maximum encoded size of messages (where known) */
/* Artist_size depends on runtime parameters */
/* Album_size depends on runtime parameters */
/* Track_size depends on runtime parameters */
/* Show_size depends on runtime parameters */
/* Episode_size depends on runtime parameters */
/* Licensor_size depends on runtime parameters */
/* TopTracks_size depends on runtime parameters */
#define ActivityPeriod_size                      18
/* AlbumGroup_size depends on runtime parameters */
#define Date_size                                30
/* Image_size depends on runtime parameters */
/* ImageGroup_size depends on runtime parameters */
/* Biography_size depends on runtime parameters */
/* Disc_size depends on runtime parameters */
/* Copyright_size depends on runtime parameters */
/* Restriction_size depends on runtime parameters */
/* Availability_size depends on runtime parameters */
/* SalePeriod_size depends on runtime parameters */
/* ExternalId_size depends on runtime parameters */
/* AudioFile_size depends on runtime parameters */
/* VideoFile_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
